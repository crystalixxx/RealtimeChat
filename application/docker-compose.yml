version: "3.8"

services:
  nginx:
    image: nginx
    ports:
      - "8000:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
      - frontend
    command: /bin/sh -c "sleep 5 && nginx -g 'daemon off;'"

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data:cached

  backend:
    build:
      context: backend
      dockerfile: Dockerfile
    command: python app/main.py
    tty: true
    volumes:
      - ./backend:/app/:cached
      - ./.docker/.ipython:/root/.ipython:cached
    environment:
      PYTHONPATH: .
      PG_CONNECTION_URL: "postgresql://admin:admin@postgres:5432/postgres"
      SECURITY_KEY: "709cb22f047a59f492c4d6407e627240e2272bda11ab791c16fb4f4661f7285a95ba6efbc1bbf762cddcc3710a1487f4a3242f21b2d9cd751b3154a452c5a286"
      ALGORITHM: "HS256"
      ACCESS_TOKEN_EXPIRE_MINUTES: "30"
    depends_on:
      - "postgres"

  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile  # Используем Dockerfile.dev для разработки
    ports:
      - "5173:5173"  # Порт для Vite
      - "35729:35729"  # Порт для hot-reloading
    volumes:
      - ./frontend:/app  # Монтируем исходные файлы для hot-reloading
    environment:
      - NODE_ENV=development  # Устанавливаем режим разработки

volumes:
  db-data:
